{"version":3,"sources":["context/theme-context.js","context/user-context.js","utils/event.js","utils/error-status.js","utils/time.js","components/Error-message.jsx","pages/Footer.jsx","utils/proxy.js","utils/url.js","components/Article-edit.jsx","components/Article-detail.jsx","components/Article-list.jsx","pages/Home.jsx","pages/Login.jsx","components/Editable-input.jsx","pages/Profile.jsx","App.jsx","serviceWorker.js","index.js"],"names":["ThemeContext","createContext","theme","UserContext","user","EVENTS","REFRESH","CHECK_USER","UPDATE_USER","DISPLAY_ERROR","HIDE_ERROR","SET_THEME","events","Object","values","forEach","event","dispatch","eventName","params","callbacks","callback","addEventListener","indexOf","push","removeEventListener","callbackIndex","splice","STATUS_CODES","ERROR_TYPE","isoFormat","time","Date","toISOString","localFormat","toLocaleDateString","ErrorMessage","memo","useState","errorText","setErrorText","useEffect","timeoutHandler","displayError","errorType","clearTimeout","type","message","getErrorMessage","setTimeout","hideError","className","Footer","href","api","METHOD","GET","PUT","DELETE","POST","method","PARAM","toLowerCase","url","content","param","headers","body","JSON","stringify","query","entries","map","key","value","encodeURIComponent","join","fetch","catch","Promise","reject","ok","status","then","response","json","USER_PROPERTY","USER_CONTACT_PROPERTY","getUserUrl","userid","attribute","getArticleUrl","articleId","ArticleEdit","article","action","articleTitle","articleContent","articleTags","title","setTitle","setContent","newTag","setNewTag","useReducer","state","tag","index","slice","Error","tags","addNewTag","useCallback","name","onChange","e","target","cols","rows","onClick","disabled","ArticleDetail","updateThumbup","likeIt","post","id","count","dateTime","createTime","lastModifyTime","src","alt","thumbups","ArticleList","displayDetail","articles","setArticles","get","articleLists","useMemo","timeBasedArticles","length","sort","a","b","currentDateString","articleNodes","createDateString","Home","useContext","userContext","page","setPage","currentArticle","setCurrentArticle","refresh","modifyArticle","put","pageAdd","pageEdit","pageDisplay","pageDetail","pageRender","Login","username","setUsername","keyPressHandler","signin","preventDefault","minLength","EditableInput","update","originValue","readonly","setValue","isEditMode","setIsEditMode","inputEl","useRef","updateData","newValue","edit","cancel","current","focus","ref","Profile","themeContext","updateProperty","property","updateContactInfo","displayName","checked","profile","contactInfo","area","email","github","linkedin","description","App","setUser","setTheme","refreshUser","signOut","delete","finally","updateUser","navigation","main","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.9f8f4cc7.chunk.js","sourcesContent":["import {createContext} from \"react\";\nexport const DEFAULT_THEME = \"dark\";\nexport const LIGHT_THEME = \"light\";\nexport const DARK_THEME = \"dark\";\nconst ThemeContext = createContext({ theme: DEFAULT_THEME });\nexport default ThemeContext;\n","import { createContext } from \"react\";\nconst UserContext = createContext({ user: null });\nexport default UserContext;\n","const EVENTS = {\n    REFRESH: \"refresh\",\n    CHECK_USER: \"checkUser\",\n    UPDATE_USER: \"updateUser\",\n    DISPLAY_ERROR: \"displayError\",\n    HIDE_ERROR: \"hideError\",\n    SET_THEME: \"setTheme\"\n};\nconst events = {};\nObject.values(EVENTS).forEach((event) => {\n    events[event] = [];\n});\nconst dispatch = (eventName, params) => {\n    const callbacks = events[eventName];\n    if (callbacks) {\n        for (let callback of callbacks) {\n            callback(params);\n        }\n    }\n};\nconst addEventListener = (eventName, callback) => {\n    const callbacks = events[eventName];\n    if (callbacks && callbacks.indexOf(callback) < 0) {\n        callbacks.push(callback);\n    }\n};\nconst removeEventListener = (eventName, callback) => {\n    const callbacks = events[eventName];\n    if (callbacks) {\n        const callbackIndex = callbacks.indexOf(callback);\n        if (callbackIndex > -1) {\n            callbacks.splice(callbackIndex, 1);\n        }\n    }\n};\n\nexport { EVENTS, addEventListener, removeEventListener, dispatch };","export const STATUS_CODES = {\n    \"SUCCESS\": 200,\n    \"BAD_RQUEST\": 400,\n    \"UNAUTHORIZED\": 401,\n    \"FORBIDDEN\": 403,\n    \"NOT_FOUND\": 404,\n    \"DUPLICATED\": 409,\n    \"INTERNAL_SERVER_ERROR\": 500,\n    \"NETWORK_ERROR\": 503\n};\nexport const ERROR_TYPE = {\n    USER_NAME_ERROR: 0,\n    NETWORK_ERROR: 1,\n    ARTICLE_ID_ERROR: 2,\n    SESSION_ERROR: 3,\n    ARTICLE_PARAM_ERROR: 4,\n    UNEXPECTED_ERROR: 5\n};","const isoFormat = (time) => (new Date(time)).toISOString();\nconst localFormat = (time) => (new Date(time)).toLocaleDateString('en-US');\n\nconst TEN_SECOND = 10000;\n\nexport {isoFormat, localFormat, TEN_SECOND};","import React, {useState, memo, useEffect} from \"react\";\n\nimport {EVENTS, addEventListener, removeEventListener} from \"../utils/event\";\nimport {ERROR_TYPE} from \"../utils/error-status\";\nimport { TEN_SECOND} from \"../utils/time\";\n\nconst getErrorMessage = (type) => {\n    let message = \"\";\n    switch(type) {\n        case ERROR_TYPE.USER_NAME_ERROR:\n            message = \"User name is not valid!\";\n            break;\n        case ERROR_TYPE.NETWORK_ERROR:\n            message = \"Unable to connect to server! Please try again!\";\n            break;\n        case ERROR_TYPE.ARTICLE_ID_ERROR:\n            message = \"Wrong article id!\";\n            break;\n        case ERROR_TYPE.SESSION_ERROR:\n            message = \"Please login first!\";\n            break;\n        case ERROR_TYPE.ARTICLE_PARAM_ERROR:\n            message = \"Param error!\";\n            break;\n        case ERROR_TYPE.UNEXPECTED_ERROR:\n        default:\n            message = \"Something went wrong!\"\n            break;\n    }\n    return message;\n};\n\nconst ErrorMessage = memo(() => {\n    const [errorText, setErrorText] = useState(\"\");\n    useEffect(() => {\n        let timeoutHandler = -1;\n        const displayError = (errorType) => {\n            clearTimeout(timeoutHandler);\n            setErrorText(getErrorMessage(errorType));\n            timeoutHandler = setTimeout(() => {\n                hideError();\n            }, TEN_SECOND);\n        };\n        const hideError = () => {\n            clearTimeout(timeoutHandler);\n            timeoutHandler = -1;\n            setErrorText(\"\");\n        };\n        addEventListener(EVENTS.DISPLAY_ERROR, displayError);\n        addEventListener(EVENTS.HIDE_ERROR, hideError);\n        return ()=>{\n            removeEventListener(EVENTS.DISPLAY_ERROR, displayError);\n            removeEventListener(EVENTS.HIDE_ERROR, hideError);\n        };\n    }, []);\n\n    return (\n        <div className={`error ${errorText === \"\" ? \"\" : \"display\"}`}>\n            {errorText}\n        </div>\n    );\n});\n\nexport default ErrorMessage;","import React, { memo } from 'react';\n\nconst Footer = memo(()=>{\n    return (<footer>\n        <ul className=\"footer-personal-info\">\n            <li>© 2020 Yiji Huang</li>\n            <li className=\"footer-divider\"></li>\n            <li>\n                <span>E-mail: </span>\n                <a href=\"mailto:huang.yiji@northeastern.edu\">huang.yiji@northeastern.edu</a>\n            </li>\n            <li className=\"footer-divider\"></li>\n            <li>\n                <span>Icons by </span>\n                <a href=\"https://icons8.com\">Icons8</a>\n            </li>\n        </ul>\n    </footer>);\n});\n\nexport default Footer;\n\n","import {STATUS_CODES} from \"./error-status\";\nconst api = {};\nconst METHOD = {\n    GET: \"get\",\n    PUT: \"put\",\n    DELETE: \"delete\",\n    POST: \"post\",\n};\nObject.values(METHOD).forEach((method) => {\n    const PARAM = {\n        method\n    };\n    api[method.toLowerCase()] = (url, content) => {\n        const param = {...PARAM};\n        if (content) {\n            if (method !== METHOD.GET) {\n                param.headers = { 'Content-Type': 'application/json' };\n                param.body = JSON.stringify(content);\n            } else {\n                const query = Object.entries(content).map(([key, value]) => {\n                    return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n                }).join(\"&\");\n                url = url + (query === \"\" ? \"\" : \"?\" + query);\n            }\n        }\n        return fetch(url, param).catch(()=>{\n            return Promise.reject({\n                ok: false,\n                status: STATUS_CODES.NETWORK_ERROR\n            });\n        }).then((response)=>{\n            if (response.ok) {\n                return response.json();\n            } else {\n                return Promise.reject(response);\n            }\n        });\n    };\n});\nexport default api;","const SESSION = \"/session\";\nconst USER = \"/user\";\nconst ARTICLE = \"/article\";\nconst THUMBSUP = \"/thumbsup\";\n\nconst USER_PROPERTY = {\n    DISPLAYNAME: \"displayName\",\n    THEME: \"theme\",\n    CONTACTINFO: \"contactInfo\",\n    SKILLS: \"skills\",\n    EDUCATION: \"education\",\n    EXPERIENCE: \"experience\",\n};\nconst USER_CONTACT_PROPERTY = {\n    EMAIL: \"email\",\n    GITHUB: \"github\",\n    LINKEDIN: \"linkedin\",\n    AREA: \"area\",\n    DESCRIPTION: \"description\",\n};\nconst getSessionUrl = () => {\n    return SESSION;\n};\nconst getUserUrl = (userid, attribute) => {\n    if (attribute) {\n        return `${USER}/${userid}/${attribute}`;\n    } else {\n        return `${USER}/${userid}`;\n    }\n};\n\nconst getArticleUrl = (articleId) => {\n    if (articleId) {\n        return `${ARTICLE}/${articleId}`;\n    } else {\n        return ARTICLE;\n    }\n};\nconst getThumbsupUrl = (articleId) => {\n    return `${ARTICLE}/${articleId}${THUMBSUP}`;\n};\n\nexport {\n    getSessionUrl,\n    getUserUrl,\n    getArticleUrl,\n    getThumbsupUrl,\n    USER_PROPERTY,\n    USER_CONTACT_PROPERTY\n};","import React, { useState, memo, useReducer, useCallback } from \"react\";\n\nconst ACTION_ADD = \"add\";\nconst ACTION_REMOVE = \"remove\";\n\nconst ArticleEdit = memo(({ article = {}, action }) => {\n    const {articleId = \"\", articleTitle = \"\", articleContent = \"\", articleTags = []} = article;\n    const [title, setTitle] = useState(articleTitle);\n    const [content, setContent] = useState(articleContent);\n    const [newTag, setNewTag] = useState(\"\");\n    const reducer = (state, action) => {\n        const tag = action.tag;\n        switch (action.type) {\n            case ACTION_ADD:\n                if (state.indexOf(tag) === -1) {\n                    return [...state, tag];\n                }\n                return state;\n            case ACTION_REMOVE:\n                const index = state.indexOf(tag);\n                if (index > -1) {\n                    return [...state.slice(0, index), ...state.slice(index+1)];\n                }\n                return state;\n            default:\n                throw new Error(\"Wrong action type! Type: \" + action.type);\n        }\n    };\n    const [tags, dispatch] = useReducer(reducer, articleTags);\n    const addNewTag = useCallback(() => {\n        dispatch({ type: ACTION_ADD, tag: newTag});\n        setNewTag(\"\");\n    }, [newTag]);\n\n    return (\n        <div className=\"article-edit\">\n            <label > Title: </label>\n            <input type=\"text\" name=\"title\" onChange={(e)=>{setTitle(e.target.value)}} value={title}/>\n            <label > Content: </label>\n            <textarea name=\"\" cols=\"30\" rows=\"10\" className=\"content\" onChange={(e) => { setContent(e.target.value) }}  value={content}></textarea>\n            <span>Tags:</span>\n            <div className=\"tags\">\n                {tags.map((tag) => {\n                    return (<div key={tag} className=\"tag-edit\">\n                        <span>{tag}</span>\n                        <button className=\"tag-delete\" onClick={() => { dispatch({ type: ACTION_REMOVE, tag})}}>X</button>\n                    </div>\n                )})}\n            </div>\n            <label>Add tag:</label>\n            <div>\n                <input className=\"new-tag\" type=\"text\" value={newTag} onChange={(e)=>{setNewTag(e.target.value)}}/>\n                <button className=\"tag-add\" onClick={addNewTag} disabled={!newTag}>Add tag</button>\n            </div>\n            <button disabled={!title} onClick={() => { action(title, content, tags, articleId)}}>{articleTitle ? \"Update\" : \"Submit\"}</button>\n        </div>\n    );\n});\n\nexport default ArticleEdit;","import React, { memo, useCallback } from \"react\";\nimport api from \"../utils/proxy\";\nimport {  getThumbsupUrl } from \"../utils/url\";\n\nimport { ERROR_TYPE, STATUS_CODES } from \"../utils/error-status\";\nimport { EVENTS, dispatch } from \"../utils/event\";\nimport { isoFormat, localFormat} from \"../utils/time\";\n\nconst ArticleDetail = memo(({ article, updateThumbup}) => {\n;\n    const likeIt = useCallback(()=>{\n        api.post(getThumbsupUrl(article.id)).then(({count})=>{\n            updateThumbup(count);\n        }).catch(response=>{\n            if (response.status === STATUS_CODES.UNAUTHORIZED || response.status === STATUS_CODES.FORBIDDEN) {\n                dispatch(EVENTS.DISPLAY_ERROR, ERROR_TYPE.SESSION_ERROR);\n                dispatch(EVENTS.CHECK_USER);\n            } else if (response.status === STATUS_CODES.NETWORK_ERROR) {\n                dispatch(EVENTS.DISPLAY_ERROR, ERROR_TYPE.NETWORK_ERROR);\n            }\n        });\n    }, [article.id, updateThumbup]);\n    return (<article className=\"article-detail\">\n        <h2 className=\"title\">{article.title}</h2>\n        <div className=\"meta\">\n            <span>Created: </span>\n            <time dateTime={isoFormat(article.createTime)}>{localFormat(article.createTime)}</time>\n            <span className=\"sperator\">/</span>\n            <span>Modified: </span>\n            <time dateTime={isoFormat(article.lastModifyTime)}>{localFormat(article.lastModifyTime)}</time>\n        </div>\n        <div className=\"tags\">\n            <img src=\"https://img.icons8.com/cotton/64/000000/price-tag--v4.png\" alt=\"tag-icon\"/>\n            {article.tags.map(tag=>{\n                return (\n                <div key={tag} className=\"tag\">\n                    <span>{tag}</span>\n                </div>\n            )})}\n        </div>\n        <pre className=\"content\">{article.content}</pre>\n        <div className=\"thumbup\">\n            <img onClick={likeIt} src=\"https://img.icons8.com/cotton/64/000000/thumb-up--v1.png\" alt=\"thumbup\"/>\n            <span>{article.thumbups}</span>\n        </div>\n    </article>);\n});\n\nexport default ArticleDetail;","import React, { memo, useEffect, useState, useMemo } from \"react\";\nimport api from \"../utils/proxy\";\nimport { getArticleUrl } from \"../utils/url\";\n\nimport { ERROR_TYPE, STATUS_CODES } from \"../utils/error-status\";\nimport { EVENTS, dispatch } from \"../utils/event\";\n\nimport { isoFormat, localFormat } from \"../utils/time\";\n\nconst ArticleList = memo(({ displayDetail}) => {\n    const [articles, setArticles] = useState(null);\n    useEffect(()=>{\n        api.get(getArticleUrl()).then(({ articles})=>{\n            setArticles(articles);\n        }).catch(response=>{\n            if (response.status === STATUS_CODES.NETWORK_ERROR) {\n                dispatch(EVENTS.DISPLAY_ERROR, ERROR_TYPE.NETWORK_ERROR);\n            }\n        });\n    }, []);\n    const articleLists = useMemo(() => {\n        if (articles) {\n            const timeBasedArticles = Object.values(articles);\n            if (timeBasedArticles.length === 0) {\n                return <div>No articles yet. Logged-in user can post new blog.</div>\n            }\n            timeBasedArticles.sort((a, b) => {\n                return a.createTime - b.createTime;\n            });\n            let currentDateString = \"\";\n            const articleNodes = [];\n            timeBasedArticles.forEach((article)=>{\n                const createDateString = localFormat(article.createTime);\n                if (createDateString !== currentDateString) {\n                    articleNodes.push(\n                        <h2 key={createDateString}> \n                            {currentDateString !== \"\" && <div className=\"seperator\"></div>}\n                            <time dateTime={isoFormat(article.createTime)}>{createDateString}</time>\n                        </h2>\n                    );\n                    currentDateString = createDateString;\n                }\n                articleNodes.push((\n                    <div key={article.id} className=\"article\">\n                        <h3 className=\"title\" onClick={() => { displayDetail(article)}}>\n                            {article.title}\n                        </h3>\n                        <p className=\"content\">{article.content}</p>\n                        <div className=\"tags\">\n                            <img src=\"https://img.icons8.com/cotton/64/000000/price-tag--v4.png\" alt=\"tag-icon\" className=\"tag-icon\"/>\n                            {article.tags.map((tag)=><span key={tag} className=\"tag\">{tag}</span>)}\n                        </div>\n                    </div>\n                ));\n            });\n            return articleNodes;\n        } else {\n            return <div>loading...</div>\n        }\n    }, [articles, displayDetail]);\n    return (<div className=\"article-brief\">\n        {articleLists}\n    </div>);\n});\n\nexport default ArticleList;","import React, { memo, useState, useMemo, useContext, useCallback, useEffect } from 'react';\n\nimport userContext from \"../context/user-context\";\n\nimport { EVENTS, addEventListener, removeEventListener, dispatch } from '../utils/event';\nimport { ERROR_TYPE, STATUS_CODES } from \"../utils/error-status\";\nimport api from \"../utils/proxy\";\nimport { getArticleUrl} from \"../utils/url\";\n\nimport ArticleEdit from \"../components/Article-edit\";\nimport ArticleDetail from \"../components/Article-detail\";\nimport ArticleList from \"../components/Article-list\";\n\nconst PAGE_ADD = \"addPage\";\nconst PAGE_DISPLAY = \"displayPage\";\nconst PAGE_DETAIL = \"detailPage\";\nconst PAGE_EDIT = \"editPage\";\n\nconst Home = memo(() => {\n    const user = useContext(userContext);\n    const [page, setPage] = useState(PAGE_DISPLAY);\n    const [currentArticle, setCurrentArticle] = useState(null);\n\n    useEffect(() => {\n        const refresh = () => {\n            setPage(PAGE_DISPLAY);\n        };\n        addEventListener(EVENTS.REFRESH, refresh);\n        return () => {\n            removeEventListener(EVENTS.REFRESH, refresh);\n        }\n    }, []);\n\n    const modifyArticle = useCallback((title, content, tags, id)=>{\n        const param = { title, content, tags };\n        const promise = id ? api.put(getArticleUrl(id), param) : api.post(getArticleUrl(), param);\n        promise.then(({article})=>{\n            setCurrentArticle(article);\n            setPage(PAGE_DETAIL);\n        }).catch((response)=>{\n            if (response.status === STATUS_CODES.UNAUTHORIZED || response.status === STATUS_CODES.FORBIDDEN) {\n                dispatch(EVENTS.DISPLAY_ERROR, ERROR_TYPE.SESSION_ERROR);\n                dispatch(EVENTS.CHECK_USER);\n                setPage(id ? PAGE_DETAIL : PAGE_DISPLAY);\n            } else if (response.status === STATUS_CODES.BAD_RQUEST) {\n                dispatch(EVENTS.DISPLAY_ERROR, ERROR_TYPE.ARTICLE_PARAM_ERROR);\n            } else if (response.status === STATUS_CODES.NETWORK_ERROR) {\n                dispatch(EVENTS.DISPLAY_ERROR, ERROR_TYPE.NETWORK_ERROR);\n            }\n        });\n    }, []);\n\n    const displayDetail = useCallback((article)=>{\n        setCurrentArticle(article);\n        setPage(PAGE_DETAIL);\n    }, []);\n\n    const updateThumbup = useCallback((count)=>{\n        setCurrentArticle({ ...currentArticle, thumbups:count});\n    }, [currentArticle]);\n\n    const pageAdd = useMemo(() => {\n        return (<div className=\"home\">\n            <button onClick={()=>{setPage(PAGE_DISPLAY)}} className=\"article-action\">Home</button>\n            <ArticleEdit action={modifyArticle}></ArticleEdit>\n        </div>);\n    }, [modifyArticle]);\n    const pageEdit = useMemo(() => {\n        if (currentArticle) {\n            return (<div className=\"home\">\n                <button onClick={() => { setPage(PAGE_DISPLAY) }} className=\"article-action\">Home</button>\n                <button onClick={() => { setPage(PAGE_DETAIL) }} className=\"article-action\">Cancel</button>\n                <ArticleEdit action={modifyArticle} article={{ articleId: currentArticle.id, articleTitle: currentArticle.title, articleContent: currentArticle.content, articleTags: currentArticle.tags}}></ArticleEdit>\n            </div>);\n        }\n    }, [modifyArticle, currentArticle]);\n    const pageDisplay = useMemo(() => {\n        return (<div className=\"home\">\n            {user && <button onClick={() => { setPage(PAGE_ADD) }} className=\"article-action\">New Article</button>}\n            <ArticleList displayDetail={displayDetail}></ArticleList>\n        </div>);\n    }, [user, displayDetail]);\n    const pageDetail = useMemo(() => {\n        return (\n            <div>\n                <button onClick={() => { setPage(PAGE_DISPLAY) }} className=\"article-action\">Home</button>\n                {user && <button onClick={() => { setPage(PAGE_EDIT) }} className=\"article-action\">Edit</button>}\n                {!currentArticle ? <div>loading</div> : <ArticleDetail article={currentArticle} updateThumbup={updateThumbup}></ArticleDetail>}\n            </div>);\n    }, [user, currentArticle, updateThumbup]);\n    const pageContent = useMemo(()=>{\n        let pageRender;\n        switch (page) {\n            case PAGE_ADD:\n                pageRender = pageAdd;\n                break;\n            case PAGE_DETAIL:\n                pageRender = pageDetail;\n                break;\n            case PAGE_EDIT:\n                pageRender = pageEdit;\n                break;\n            case PAGE_DISPLAY:\n            default:\n                pageRender = pageDisplay;\n                break;\n        }\n        return pageRender;\n    }, [page, pageAdd, pageDetail, pageDisplay, pageEdit]);\n\n    return pageContent;\n});\n\nexport default Home;","import React, { useState, memo, useCallback } from \"react\";\n\nimport { ERROR_TYPE, STATUS_CODES } from \"../utils/error-status\";\nimport { EVENTS, dispatch } from \"../utils/event\";\nimport api from \"../utils/proxy\";\nimport { getSessionUrl} from \"../utils/url\";\n\nconst Login = memo(() => {\n    const [username, setUsername] = useState(\"\");\n    const keyPressHandler = useCallback((event) => {\n        const value = event.target.value;\n        setUsername(value);\n    }, [setUsername]);\n    const signin = useCallback((event) => {\n        event.preventDefault();\n        api.post(getSessionUrl(), { username }).then(() => {\n            setUsername(\"\");\n            dispatch(EVENTS.HIDE_ERROR);\n            dispatch(EVENTS.REFRESH);\n        }).catch((response) => {\n            if (response.status === STATUS_CODES.UNAUTHORIZED || response.status === STATUS_CODES.FORBIDDEN) {\n                setUsername(\"\");\n                dispatch(EVENTS.DISPLAY_ERROR, ERROR_TYPE.SESSION_ERROR);\n            } else if (response.status === STATUS_CODES.BAD_RQUEST) {\n                setUsername(\"\");\n                dispatch(EVENTS.DISPLAY_ERROR, ERROR_TYPE.USER_NAME_ERROR);\n            } else if (response.status === STATUS_CODES.NETWORK_ERROR) {\n                dispatch(EVENTS.DISPLAY_ERROR, ERROR_TYPE.NETWORK_ERROR);\n            }\n        });\n    }, [username, setUsername]);\n    return (\n        <div className=\"login-page\">\n            <label>\n                User Name:\n                <input id=\"user-name\" type=\"text\" value={username} onChange={keyPressHandler} minLength={1} />\n            </label>\n            <button className=\"signin\" onClick={signin}>Sign in</button>\n        </div>\n    );\n});\nexport default Login;","import React, { memo, useState, useCallback, useRef } from \"react\";\nimport { useEffect } from \"react\";\n\nconst EditableInput = memo(({ update, originValue=\"\", readonly=false}) => {\n    const [value, setValue] = useState(originValue);\n    const [isEditMode, setIsEditMode] = useState(false);\n    const inputEl = useRef(null);\n    const updateData = useCallback((newValue) => {\n        if (update) {\n            update(newValue);\n        }\n        setIsEditMode(false);\n    }, [update]);\n    const edit = useCallback(()=>{\n        if (!readonly) { \n            setIsEditMode(true);\n        }\n    }, [readonly]);\n    const cancel = useCallback(() => {\n        setValue(originValue);\n        setIsEditMode(false);\n    }, [originValue]);\n    useEffect(()=>{\n        if (isEditMode && inputEl && inputEl.current) {\n            inputEl.current.focus();\n        }\n    }, [inputEl, isEditMode]);\n    return (<div className=\"editable-input\">\n        {isEditMode ? \n        (<div className=\"edit\">\n            <input value={value} onChange={(e) => { setValue(e.target.value) }} ref={inputEl}></input>\n            <button onClick={() => updateData(value)}>Confirm</button>\n            <button onClick={cancel}>Cancel</button>\n        </div>) : \n        (<div className=\"read\" onClick={edit}>\n            <span>{value||\"empty\"}</span>\n            <img src=\"https://img.icons8.com/cotton/50/000000/edit.png\" alt=\"edit\" className=\"edit-icon\"/>\n        </div>)\n        }\n    </div>);\n       \n});\n\nexport default EditableInput;","import React, { memo, useContext, useCallback } from 'react';\nimport userContext from \"../context/user-context\";\nimport themeContext, { DARK_THEME, LIGHT_THEME} from \"../context/theme-context\";\n\n\nimport api from \"../utils/proxy\";\nimport { ERROR_TYPE, STATUS_CODES } from \"../utils/error-status\";\nimport { getUserUrl, USER_PROPERTY, USER_CONTACT_PROPERTY} from \"../utils/url\";\nimport { EVENTS,dispatch } from '../utils/event';\n\nimport EditableInput from \"../components/Editable-input\";\n\nconst Profile = memo(() => {\n    const user = useContext(userContext);\n    const theme = useContext(themeContext);\n    \n    const updateProperty = useCallback((property)=>{\n        return (newValue)=>{\n            api.put(getUserUrl(user.id, property), { [property]: newValue }).then(({ user }) => {\n                dispatch(EVENTS.UPDATE_USER, user);\n            }).catch(response => {\n                if (response.status === STATUS_CODES.UNAUTHORIZED || response.status === STATUS_CODES.FORBIDDEN) {\n                    dispatch(EVENTS.DISPLAY_ERROR, ERROR_TYPE.SESSION_ERROR);\n                    dispatch(EVENTS.REFRESH);\n                } else if (response.status === STATUS_CODES.BAD_RQUEST) {\n                    dispatch(EVENTS.DISPLAY_ERROR, ERROR_TYPE.ARTICLE_PARAM_ERROR);\n                } else if (response.status === STATUS_CODES.NETWORK_ERROR) {\n                    dispatch(EVENTS.DISPLAY_ERROR, ERROR_TYPE.NETWORK_ERROR);\n                }\n            });\n        };\n    }, [user]);\n    const updateContactInfo = useCallback((property)=>{\n        return (newValue)=>{\n            updateProperty(USER_PROPERTY.CONTACTINFO)({[property]: newValue});\n        };\n    }, [updateProperty]);\n    return (<div className=\"profile\">\n        <section className=\"basic\">\n            <h3 className=\"title\">Basic Information</h3>\n            <img src=\"https://img.icons8.com/dusk/64/000000/employee-card.png\" alt=\"name\" className=\"label\" title=\"name\"/>\n            <EditableInput originValue={user.displayName} update={updateProperty(USER_PROPERTY.DISPLAYNAME)}></EditableInput>\n            <img src=\"https://img.icons8.com/dusk/64/000000/change-theme.png\" alt=\"theme\" className=\"label\" title=\"theme\"/>\n            <div className=\"theme\">\n                <label>\n                    Dark :\n                    <input type=\"radio\" name=\"theme\" checked={theme === DARK_THEME} onChange={() => updateProperty(USER_PROPERTY.THEME)(DARK_THEME)}/>\n                </label>\n                <label>\n                    Light :\n                    <input type=\"radio\" name=\"theme\" checked={theme === LIGHT_THEME} onChange={() => updateProperty(USER_PROPERTY.THEME)(LIGHT_THEME)}/>\n                </label>\n            </div>\n        </section>\n        <section className=\"contact\">\n            <h3 className=\"title\">Contact Information</h3>\n            <img src=\"https://img.icons8.com/bubbles/50/000000/map-marker.png\" alt=\"area\" className=\"label\" title=\"area\"/>\n            <EditableInput originValue={user.profile.contactInfo.area} update={updateContactInfo(USER_CONTACT_PROPERTY.AREA)}></EditableInput>\n            <img src=\"https://img.icons8.com/bubbles/50/000000/email.png\" alt=\"email\" className=\"label\" title=\"email\"/>\n            <EditableInput originValue={user.profile.contactInfo.email} update={updateContactInfo(USER_CONTACT_PROPERTY.EMAIL)}></EditableInput>\n            <img src=\"https://img.icons8.com/doodle/48/000000/github--v1.png\" alt=\"github\" className=\"label\" title=\"github\"/>\n            <EditableInput originValue={user.profile.contactInfo.github} update={updateContactInfo(USER_CONTACT_PROPERTY.GITHUB)}></EditableInput>\n            <img src=\"https://img.icons8.com/doodle/48/000000/linkedin--v2.png\" alt=\"linkedin\" className=\"label\" title=\"linkedin\"/>\n            <EditableInput originValue={user.profile.contactInfo.linkedin} update={updateContactInfo(USER_CONTACT_PROPERTY.LINKEDIN)}></EditableInput>\n            <img src=\"https://img.icons8.com/dusk/64/000000/note.png\" alt=\"description\" className=\"label\" title=\"description\"/>\n            <EditableInput originValue={user.profile.contactInfo.description} update={updateContactInfo(USER_CONTACT_PROPERTY.DESCRIPTION)}></EditableInput>\n        </section>\n    </div>);\n});\n\nexport default Profile;","import React, {useState, useEffect, useCallback, useMemo} from 'react';\n\nimport ThemeContext, {DEFAULT_THEME} from \"./context/theme-context\";\nimport UserContext from \"./context/user-context\";\n\nimport ErrorMessage from \"./components/Error-message\";\nimport Footer from \"./pages/Footer\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Profile from \"./pages/Profile\";\n\nimport { EVENTS, addEventListener, removeEventListener, dispatch } from './utils/event';\nimport { STATUS_CODES, ERROR_TYPE } from \"./utils/error-status\";\nimport { getSessionUrl, getUserUrl } from \"./utils/url\";\nimport api from \"./utils/proxy\";\n\nimport './App.css';\n\nconst THEME_SUFFIX = \"-theme\";\n\nconst HOME_PAGE = \"home\";\nconst LOGIN_PAGE = \"login\";\nconst PROFILE_PAGE = \"profile\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [page, setPage] = useState(HOME_PAGE);\n  const [theme, setTheme] = useState(DEFAULT_THEME);\n  const refreshUser = useCallback(() => {\n    api.get(getSessionUrl()).then(({ userid }) => {\n      return api.get(getUserUrl(userid));\n    }).then(({ user }) => {\n      dispatch(EVENTS.HIDE_ERROR);\n      setUser(user);\n      setTheme(user.theme || DEFAULT_THEME);\n    }).catch((response) => {\n      if (response.status === STATUS_CODES.NETWORK_ERROR) {\n        dispatch(EVENTS.DISPLAY_ERROR, ERROR_TYPE.NETWORK_ERROR);\n      } else {\n        setUser(null);\n        setTheme(DEFAULT_THEME);\n      }\n    });\n  }, []);\n  const refresh = useCallback(() => {\n    setPage(HOME_PAGE);\n    refreshUser();\n  }, [refreshUser]);\n\n  const signOut = useCallback(() => {\n    api.delete(getSessionUrl()).finally(()=>{\n      setPage(HOME_PAGE);\n      setUser(null);\n      setTheme(DEFAULT_THEME);\n    });\n  }, []);\n\n  useEffect(() => {\n    refresh();\n    const updateUser = (user) => {\n      setUser(user);\n      setTheme(user.theme || DEFAULT_THEME);\n    };\n    addEventListener(EVENTS.REFRESH, refresh);\n    addEventListener(EVENTS.CHECK_USER, refreshUser);\n    addEventListener(EVENTS.UPDATE_USER, updateUser);\n    return () => {\n      removeEventListener(EVENTS.REFRESH, refresh);\n      removeEventListener(EVENTS.CHECK_USER, refreshUser);\n      removeEventListener(EVENTS.UPDATE_USER, updateUser);\n    };\n  }, [refresh, refreshUser]);\n\n  const navigation = useMemo(() => {\n    if (user) {\n      return (<ol>\n        <li className=\"nav\" onClick={() => {setPage(HOME_PAGE)}}>Blog</li>\n        <li className=\"nav\" onClick={()=> {setPage(PROFILE_PAGE)}}>Profile</li>\n        <li className=\"nav\" onClick={() => {signOut()}}>Sign Out</li>\n      </ol>);\n    } else {\n      return (<ol>\n        <li className=\"nav\" onClick={()=>{setPage(HOME_PAGE)}}>Blog</li>\n        <li className=\"nav\" onClick={()=>{setPage(LOGIN_PAGE)}}>Sign In</li>\n      </ol>);\n    }\n  }, [user, signOut]);\n\n  const main = useMemo(()=>{\n    let pageRender;\n    switch (page) {\n      case LOGIN_PAGE:\n        pageRender = <Login></Login>;\n        break;\n      case PROFILE_PAGE:\n        pageRender = <Profile></Profile>;\n        break;\n      case HOME_PAGE:\n      default:\n        pageRender = <Home></Home>;\n        break;\n    }\n    return pageRender;\n  }, [page]);\n\n  return (\n      <div className={`${theme + THEME_SUFFIX} App`}>\n        <UserContext.Provider value={user}>\n        <header>\n          <nav className=\"navigations\">\n            <img src=\"/logo.png\" alt=\"blog logo\" className=\"logo-title\"/>\n            <h1>Welcome{user ? \", \" + user.displayName: \" to my Blog\"}</h1>\n            {navigation}\n          </nav>\n        </header>\n        <main>\n          <ErrorMessage></ErrorMessage>\n          <ThemeContext.Provider value={theme}>\n            {main}\n          </ThemeContext.Provider>\n        </main>\n        </UserContext.Provider>\n        <Footer></Footer>\n      </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}